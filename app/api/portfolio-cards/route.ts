import { type NextRequest, NextResponse } from "next/server"

// –î–æ–±–∞–≤–ª—è–µ–º –¥–∏–Ω–∞–º–∏—á–µ—Å–∫—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
export const dynamic = "force-dynamic"
export const runtime = "nodejs"

// –î–∞–Ω–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–µ–∫ –¥–ª—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
const portfolioCards = [
  {
    id: "sany-530s",
    name: "SANY SYG5530THB-62",
    category: "–°—Ç–∞—Ü–∏–æ–Ω–∞—Ä–Ω—ã–µ",
    price: "–¶–µ–Ω–∞ –ø–æ –∑–∞–ø—Ä–æ—Å—É",
    image: "/images/pump1.jpg",
    specs: {
      reach: "62 –º",
      output: "180 –º¬≥/—á",
      engine: "Weichai 375 –ª.—Å.",
      weight: "53 —Ç",
    },
    description: "–í—ã—Å–æ–∫–æ–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω—ã–π –∞–≤—Ç–æ–±–µ—Ç–æ–Ω–æ–Ω–∞—Å–æ—Å –¥–ª—è –∫—Ä—É–ø–Ω—ã—Ö —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤",
    features: ["–í—ã—Å–æ–∫–∞—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å", "–≠–∫–æ–Ω–æ–º–∏—á–Ω—ã–π —Ä–∞—Å—Ö–æ–¥ —Ç–æ–ø–ª–∏–≤–∞", "–ü—Ä–æ—Å—Ç–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ"],
    isVisible: true,
    order: 1,
  },
  {
    id: "sany-370c-10",
    name: "SANY SYG5370THB-52",
    category: "–ú–æ–±–∏–ª—å–Ω—ã–µ",
    price: "–¶–µ–Ω–∞ –ø–æ –∑–∞–ø—Ä–æ—Å—É",
    image: "/images/pump2.jpg",
    specs: {
      reach: "52 –º",
      output: "160 –º¬≥/—á",
      engine: "Weichai 336 –ª.—Å.",
      weight: "37 —Ç",
    },
    description: "–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –∞–≤—Ç–æ–±–µ—Ç–æ–Ω–æ–Ω–∞—Å–æ—Å –¥–ª—è —Å—Ä–µ–¥–Ω–∏—Ö –∏ –∫—Ä—É–ø–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤",
    features: ["–ö–æ–º–ø–∞–∫—Ç–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã", "–í—ã—Å–æ–∫–∞—è –º–∞–Ω–µ–≤—Ä–µ–Ω–Ω–æ—Å—Ç—å", "–ù–∞–¥–µ–∂–Ω–∞—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è"],
    isVisible: true,
    order: 2,
  },
  {
    id: "sany-710s",
    name: "SANY SYG5710THB-86",
    category: "–°—Ç–∞—Ü–∏–æ–Ω–∞—Ä–Ω—ã–µ",
    price: "–¶–µ–Ω–∞ –ø–æ –∑–∞–ø—Ä–æ—Å—É",
    image: "/images/pump3.jpg",
    specs: {
      reach: "86 –º",
      output: "200 –º¬≥/—á",
      engine: "Weichai 420 –ª.—Å.",
      weight: "71 —Ç",
    },
    description: "–ú–æ—â–Ω—ã–π –∞–≤—Ç–æ–±–µ—Ç–æ–Ω–æ–Ω–∞—Å–æ—Å –¥–ª—è –≤—ã—Å–æ—Ç–Ω–æ–≥–æ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞",
    features: ["–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –≤—ã—Å–æ—Ç–∞ –ø–æ–¥–∞—á–∏", "–í—ã—Å–æ–∫–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å", "–ü—Ä–µ–º–∏—É–º –∫–∞—á–µ—Å—Ç–≤–æ"],
    isVisible: true,
    order: 3,
  },
  {
    id: "sany-750s",
    name: "SANY SYG5750THB-72",
    category: "–°—Ç–∞—Ü–∏–æ–Ω–∞—Ä–Ω—ã–µ",
    price: "–¶–µ–Ω–∞ –ø–æ –∑–∞–ø—Ä–æ—Å—É",
    image: "/images/pump4.jpg",
    specs: {
      reach: "72 –º",
      output: "190 –º¬≥/—á",
      engine: "Weichai 395 –ª.—Å.",
      weight: "75 —Ç",
    },
    description: "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –∞–≤—Ç–æ–±–µ—Ç–æ–Ω–æ–Ω–∞—Å–æ—Å –¥–ª—è —Å–ª–æ–∂–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤",
    features: ["–°—Ç–∞–±–∏–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞", "–ù–∏–∑–∫–∏–π —É—Ä–æ–≤–µ–Ω—å —à—É–º–∞", "–î–æ–ª–≥–æ–≤–µ—á–Ω–æ—Å—Ç—å"],
    isVisible: true,
    order: 4,
  },
  {
    id: "sany-680c-10",
    name: "SANY SYG5680THB-58",
    category: "–ú–æ–±–∏–ª—å–Ω—ã–µ",
    price: "–¶–µ–Ω–∞ –ø–æ –∑–∞–ø—Ä–æ—Å—É",
    image: "/images/pump5.jpg",
    specs: {
      reach: "58 –º",
      output: "170 –º¬≥/—á",
      engine: "Weichai 360 –ª.—Å.",
      weight: "68 —Ç",
    },
    description: "–°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∞–≤—Ç–æ–±–µ—Ç–æ–Ω–æ–Ω–∞—Å–æ—Å –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∑–∞–¥–∞—á",
    features: ["–û–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Ü–µ–Ω–∞/–∫–∞—á–µ—Å—Ç–≤–æ", "–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ—Å—Ç—å", "–ü—Ä–æ—Å—Ç–æ—Ç–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è"],
    isVisible: true,
    order: 5,
  },
  {
    id: "sany-620c-10",
    name: "SANY SYG5620THB-48",
    category: "–ú–æ–±–∏–ª—å–Ω—ã–µ",
    price: "–¶–µ–Ω–∞ –ø–æ –∑–∞–ø—Ä–æ—Å—É",
    image: "/images/pump6.jpg",
    specs: {
      reach: "48 –º",
      output: "150 –º¬≥/—á",
      engine: "Weichai 310 –ª.—Å.",
      weight: "62 —Ç",
    },
    description: "–ö–æ–º–ø–∞–∫—Ç–Ω—ã–π –∞–≤—Ç–æ–±–µ—Ç–æ–Ω–æ–Ω–∞—Å–æ—Å –¥–ª—è –≥–æ—Ä–æ–¥—Å–∫–æ–≥–æ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞",
    features: ["–ö–æ–º–ø–∞–∫—Ç–Ω–æ—Å—Ç—å", "–≠–∫–æ–Ω–æ–º–∏—á–Ω–æ—Å—Ç—å", "–ë—ã—Å—Ç—Ä–∞—è –æ–∫—É–ø–∞–µ–º–æ—Å—Ç—å"],
    isVisible: true,
    order: 6,
  },
]

export async function GET(request: NextRequest) {
  try {
    const { searchParams } = new URL(request.url)
    const id = searchParams.get("id")

    console.log("üîç GET –∑–∞–ø—Ä–æ—Å –∫ /api/portfolio-cards, id:", id)

    if (id) {
      const card = portfolioCards.find((card) => card.id === id)
      if (card) {
        console.log("‚úÖ –ö–∞—Ä—Ç–æ—á–∫–∞ –Ω–∞–π–¥–µ–Ω–∞:", card.name)
        return NextResponse.json({
          success: true,
          data: card,
        })
      } else {
        console.log("‚ùå –ö–∞—Ä—Ç–æ—á–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞:", id)
        return NextResponse.json(
          {
            success: false,
            error: "–ö–∞—Ä—Ç–æ—á–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞",
          },
          { status: 404 },
        )
      }
    } else {
      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ –≤–∏–¥–∏–º—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏, –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ –ø–æ—Ä—è–¥–∫—É
      const visibleCards = portfolioCards.filter((card) => card.isVisible).sort((a, b) => a.order - b.order)

      console.log("üìã –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ:", visibleCards.length)
      return NextResponse.json({
        success: true,
        data: visibleCards,
      })
    }
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ GET /api/portfolio-cards:", error)
    return NextResponse.json(
      {
        success: false,
        error: "–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞",
      },
      { status: 500 },
    )
  }
}

export async function PUT(request: NextRequest) {
  try {
    console.log("‚úèÔ∏è PUT –∑–∞–ø—Ä–æ—Å –∫ /api/portfolio-cards")

    const body = await request.text()
    console.log("üìÑ –¢–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞:", body.substring(0, 200) + "...")

    if (!body.trim()) {
      console.log("‚ùå –ü—É—Å—Ç–æ–µ —Ç–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞")
      return NextResponse.json(
        {
          success: false,
          error: "–ü—É—Å—Ç–æ–µ —Ç–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞",
        },
        { status: 400 },
      )
    }

    let updatedCard
    try {
      updatedCard = JSON.parse(body)
    } catch (parseError) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON:", parseError)
      return NextResponse.json(
        {
          success: false,
          error: "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç JSON",
        },
        { status: 400 },
      )
    }

    console.log("üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏:", updatedCard.id)

    if (!updatedCard.id) {
      console.log("‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç ID –∫–∞—Ä—Ç–æ—á–∫–∏")
      return NextResponse.json(
        {
          success: false,
          error: "ID –∫–∞—Ä—Ç–æ—á–∫–∏ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω",
        },
        { status: 400 },
      )
    }

    const cardIndex = portfolioCards.findIndex((card) => card.id === updatedCard.id)
    if (cardIndex === -1) {
      console.log("‚ùå –ö–∞—Ä—Ç–æ—á–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞:", updatedCard.id)
      return NextResponse.json(
        {
          success: false,
          error: "–ö–∞—Ä—Ç–æ—á–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞",
        },
        { status: 404 },
      )
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞—Ä—Ç–æ—á–∫—É
    portfolioCards[cardIndex] = { ...portfolioCards[cardIndex], ...updatedCard }

    console.log("‚úÖ –ö–∞—Ä—Ç–æ—á–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞:", updatedCard.name)
    return NextResponse.json({
      success: true,
      data: portfolioCards[cardIndex],
    })
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ PUT /api/portfolio-cards:", error)
    return NextResponse.json(
      {
        success: false,
        error: "–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞",
      },
      { status: 500 },
    )
  }
}

export async function POST(request: NextRequest) {
  try {
    console.log("üìù POST –∑–∞–ø—Ä–æ—Å –∫ /api/portfolio-cards")

    const body = await request.text()
    if (!body.trim()) {
      return NextResponse.json(
        {
          success: false,
          error: "–ü—É—Å—Ç–æ–µ —Ç–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞",
        },
        { status: 400 },
      )
    }

    const action = JSON.parse(body)

    if (action.type === "reorder") {
      // –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø–æ—Ä—è–¥–∫–∞ –∫–∞—Ä—Ç–æ—á–µ–∫
      const { cardIds } = action
      cardIds.forEach((id: string, index: number) => {
        const cardIndex = portfolioCards.findIndex((card) => card.id === id)
        if (cardIndex !== -1) {
          portfolioCards[cardIndex].order = index + 1
        }
      })

      console.log("‚úÖ –ü–æ—Ä—è–¥–æ–∫ –∫–∞—Ä—Ç–æ—á–µ–∫ –æ–±–Ω–æ–≤–ª–µ–Ω")
      return NextResponse.json({
        success: true,
        data: portfolioCards.sort((a, b) => a.order - b.order),
      })
    }

    return NextResponse.json(
      {
        success: false,
        error: "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø –¥–µ–π—Å—Ç–≤–∏—è",
      },
      { status: 400 },
    )
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ POST /api/portfolio-cards:", error)
    return NextResponse.json(
      {
        success: false,
        error: "–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞",
      },
      { status: 500 },
    )
  }
}
