import { NextResponse } from "next/server"
import { cookies } from "next/headers"

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–∑–∏—Ü–∏—è—Ö
interface PositionData {
  keyword: string
  position: number | null
  url: string
  searchEngine: "google" | "yandex"
  location: string
  device: "desktop" | "mobile"
  date: string
  clicks?: number
  impressions?: number
  ctr?: number
}

// –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π API endpoint –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å OAuth —Ç–æ–∫–µ–Ω–∞–º–∏
export async function GET(request: Request) {
  const { searchParams } = new URL(request.url)
  const keywords = searchParams.get("keywords")?.split(",") || []
  const searchEngine = searchParams.get("engine") || "google"
  const location = searchParams.get("location") || "Russia"
  const days = Number.parseInt(searchParams.get("days") || "90", 10) // –£–≤–µ–ª–∏—á–∏–ª–∏ –ø–µ—Ä–∏–æ–¥ –¥–æ 90 –¥–Ω–µ–π

  try {
    // –ï—Å–ª–∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞—é—Ç—Å—è –¥–∞–Ω–Ω—ã–µ –∏–∑ Google Search Console
    if (searchEngine === "google") {
      const gscData = await getGoogleSearchConsoleDataWithOAuth(keywords, days)
      return NextResponse.json({
        success: true,
        data: gscData,
        source: "Google Search Console API (OAuth)",
        timestamp: new Date().toISOString(),
        debug: {
          keywordsRequested: keywords,
          daysRequested: days,
          totalResults: gscData.length,
        },
      })
    }
    // –ï—Å–ª–∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞—é—Ç—Å—è –¥–∞–Ω–Ω—ã–µ –∏–∑ –Ø–Ω–¥–µ–∫—Å.–í–µ–±–º–∞—Å—Ç–µ—Ä (–ø–æ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ–º–æ)
    else if (searchEngine === "yandex") {
      const positions = generateDemoData(keywords, "yandex", location)
      return NextResponse.json({
        success: true,
        data: positions,
        source: "Demo Data (Yandex)",
        timestamp: new Date().toISOString(),
      })
    }
    // –î–ª—è –¥—Ä—É–≥–∏—Ö –ø–æ–∏—Å–∫–æ–≤—ã—Ö —Å–∏—Å—Ç–µ–º –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ
    else {
      const positions = generateDemoData(keywords, searchEngine as any, location)
      return NextResponse.json({
        success: true,
        data: positions,
        source: "Demo Data",
        timestamp: new Date().toISOString(),
      })
    }
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–∑–∏—Ü–∏—è—Ö:", error)

    // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ —Å –ø–æ–º–µ—Ç–∫–æ–π –æ–± –æ—à–∏–±–∫–µ
    const positions = generateDemoData(keywords, searchEngine as any, location)
    return NextResponse.json({
      success: false,
      error: "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ API. –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ.",
      errorDetails: error instanceof Error ? error.message : String(error),
      data: positions,
      source: "Demo Data (Fallback)",
      timestamp: new Date().toISOString(),
    })
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ Google Search Console —Å OAuth —Ç–æ–∫–µ–Ω–æ–º
async function getGoogleSearchConsoleDataWithOAuth(keywords: string[], days = 90): Promise<PositionData[]> {
  try {
    // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ cookies
    const cookieStore = cookies()
    const accessToken = cookieStore.get("google_access_token")?.value

    if (!accessToken) {
      throw new Error("OAuth —Ç–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—å Google Search Console.")
    }

    // –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞—Ç—ã –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞
    const endDate = new Date()
    const startDate = new Date()
    startDate.setDate(endDate.getDate() - days)

    const formattedStartDate = startDate.toISOString().split("T")[0]
    const formattedEndDate = endDate.toISOString().split("T")[0]

    console.log(`üîç –ó–∞–ø—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö GSC –∑–∞ –ø–µ—Ä–∏–æ–¥: ${formattedStartDate} - ${formattedEndDate}`)

    // –°–ø–∏—Å–æ–∫ –≤–æ–∑–º–æ–∂–Ω—ã—Ö URL —Å–∞–π—Ç–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    const possibleSites = [
      "https://v0-avtobetononasos.vercel.app/",
      "https://v0-avtobetononasos.vercel.app",
      "sc-domain:v0-avtobetononasos.vercel.app",
    ]

    let allData: PositionData[] = []

    // –ü—Ä–æ–±—É–µ–º –∫–∞–∂–¥—ã–π –≤–æ–∑–º–æ–∂–Ω—ã–π URL —Å–∞–π—Ç–∞
    for (const site of possibleSites) {
      try {
        console.log(`üåê –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∞–π—Ç: ${site}`)

        // –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –±–µ–∑ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
        const response = await fetch(
          `https://www.googleapis.com/webmasters/v3/sites/${encodeURIComponent(site)}/searchAnalytics/query`,
          {
            method: "POST",
            headers: {
              Authorization: `Bearer ${accessToken}`,
              "Content-Type": "application/json",
            },
            body: JSON.stringify({
              startDate: formattedStartDate,
              endDate: formattedEndDate,
              dimensions: ["query", "page"],
              rowLimit: 1000, // –£–≤–µ–ª–∏—á–∏–ª–∏ –ª–∏–º–∏—Ç
              startRow: 0,
            }),
          },
        )

        if (response.status === 401) {
          throw new Error("–¢–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞ –∏—Å—Ç–µ–∫")
        }

        if (response.status === 403) {
          console.log(`‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–∞–π—Ç—É: ${site}`)
          continue
        }

        if (!response.ok) {
          const errorText = await response.text()
          console.log(`‚ùå –û—à–∏–±–∫–∞ –¥–ª—è —Å–∞–π—Ç–∞ ${site}: ${response.status} ${errorText}`)
          continue
        }

        const data = await response.json()
        console.log(`üìä –ü–æ–ª—É—á–µ–Ω–æ —Å—Ç—Ä–æ–∫ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è ${site}: ${data.rows?.length || 0}`)

        if (data.rows && data.rows.length > 0) {
          // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –Ω—É–∂–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç
          const siteData: PositionData[] = data.rows.map((row: any) => {
            const keyword = row.keys[0]
            const url = row.keys[1] || site
            const position = Math.round(row.position)

            return {
              keyword,
              position,
              url,
              searchEngine: "google",
              location: "Global",
              device: "desktop",
              date: formattedEndDate,
              clicks: row.clicks || 0,
              impressions: row.impressions || 0,
              ctr: row.ctr || 0,
            }
          })

          allData = [...allData, ...siteData]
          console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ ${siteData.length} –∑–∞–ø–∏—Å–µ–π –¥–ª—è —Å–∞–π—Ç–∞ ${site}`)
        }
      } catch (siteError) {
        console.log(`‚ùå –û—à–∏–±–∫–∞ –¥–ª—è —Å–∞–π—Ç–∞ ${site}:`, siteError)
        continue
      }
    }

    // –ï—Å–ª–∏ –µ—Å—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏, —Ñ–∏–ª—å—Ç—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    if (keywords.length > 0 && keywords[0] !== "") {
      const filteredData = allData.filter((item) =>
        keywords.some((keyword) => item.keyword.toLowerCase().includes(keyword.toLowerCase().trim())),
      )
      console.log(`üîç –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–æ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º: ${filteredData.length} –∏–∑ ${allData.length}`)
      return filteredData
    }

    console.log(`üìà –ò—Ç–æ–≥–æ –¥–∞–Ω–Ω—ã—Ö: ${allData.length}`)
    return allData.slice(0, 100) // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–æ 100 –∑–∞–ø–∏—Å–µ–π –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Google Search Console:", error)
    throw error
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–µ–º–æ-–¥–∞–Ω–Ω—ã—Ö (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–∞–∫ –∑–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç)
function generateDemoData(
  keywords: string[],
  searchEngine: "google" | "yandex" = "google",
  location = "Russia",
): PositionData[] {
  return keywords.map((keyword) => ({
    keyword: keyword.trim(),
    position: Math.random() > 0.1 ? Math.floor(Math.random() * 50) + 1 : null,
    url: "https://v0-avtobetononasos.vercel.app",
    searchEngine,
    location,
    device: "desktop",
    date: new Date().toISOString().split("T")[0],
    clicks: Math.floor(Math.random() * 100),
    impressions: Math.floor(Math.random() * 1000) + 100,
    ctr: Math.random() * 0.1,
  }))
}

// API –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è
export async function POST(request: Request) {
  try {
    const { keywords, settings } = await request.json()

    console.log("–î–æ–±–∞–≤–ª–µ–Ω—ã –Ω–æ–≤—ã–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞:", keywords)
    console.log("–ù–∞—Å—Ç—Ä–æ–π–∫–∏:", settings)

    return NextResponse.json({
      success: true,
      message: "–ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–æ–±–∞–≤–ª–µ–Ω—ã –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è",
      addedKeywords: keywords.length,
    })
  } catch (error) {
    return NextResponse.json(
      {
        success: false,
        message: "–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤",
      },
      { status: 500 },
    )
  }
}
