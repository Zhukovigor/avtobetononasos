import { type NextRequest, NextResponse } from "next/server"

// Middleware –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è Google OAuth —Ç–æ–∫–µ–Ω–æ–≤
export async function authRefreshMiddleware(request: NextRequest) {
  const accessToken = request.cookies.get("google_access_token")?.value
  const refreshToken = request.cookies.get("google_refresh_token")?.value
  const sessionMeta = request.cookies.get("oauth_session_meta")?.value

  // –ï—Å–ª–∏ –Ω–µ—Ç —Ç–æ–∫–µ–Ω–æ–≤, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
  if (!accessToken || !refreshToken) {
    return NextResponse.next()
  }

  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∏—Å—Ç–µ–∫ –ª–∏ —Ç–æ–∫–µ–Ω
    const meta = sessionMeta ? JSON.parse(sessionMeta) : {}
    const expiresAt = meta.expiresAt ? new Date(meta.expiresAt) : null
    const timeToExpiry = expiresAt ? expiresAt.getTime() - Date.now() : 0

    // –ï—Å–ª–∏ —Ç–æ–∫–µ–Ω –∏—Å—Ç–µ–∫–∞–µ—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 5 –º–∏–Ω—É—Ç, –æ–±–Ω–æ–≤–ª—è–µ–º –µ–≥–æ
    if (timeToExpiry < 5 * 60 * 1000) {
      console.log("üîÑ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞...")

      const refreshResponse = await fetch(`${request.nextUrl.origin}/api/auth/google/refresh-enhanced`, {
        method: "POST",
        headers: {
          Cookie: request.headers.get("cookie") || "",
        },
      })

      if (refreshResponse.ok) {
        const result = await refreshResponse.json()
        console.log("‚úÖ –¢–æ–∫–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω")

        // –ö–æ–ø–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ cookies –≤ –æ—Ç–≤–µ—Ç
        const response = NextResponse.next()
        const setCookieHeaders = refreshResponse.headers.getSetCookie()

        setCookieHeaders.forEach((cookie) => {
          response.headers.append("Set-Cookie", cookie)
        })

        return response
      } else {
        console.log("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏")
      }
    }
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞:", error)
  }

  return NextResponse.next()
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞, –Ω—É–∂–Ω–æ –ª–∏ –ø—Ä–∏–º–µ–Ω—è—Ç—å middleware
export function shouldApplyAuthRefresh(pathname: string): boolean {
  const protectedPaths = ["/admin", "/seo-monitor", "/api/google-seo-data", "/api/seo-positions"]

  return protectedPaths.some((path) => pathname.startsWith(path))
}
